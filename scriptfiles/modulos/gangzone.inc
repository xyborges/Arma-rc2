#include <YSI-Includes\YSI_Coding\y_hooks>
new dominador[MAX_PLAYERS] = -1;
enum gzin{
	gz,
	donogz,
	dominando
}
new GzDom[MAX_GANG_ZONES][gzin];
new GangZoneAtual[MAX_PLAYERS];
enum gzenum{
	Float:GzX, Float:GzY,
	Float:GzXX, Float:GzYY
}
new const Float:gzcoord[][gzenum] = {
	{-548.015625, 947.609375, -268.015625, 1179.609375},
	{-548.015625, 715.609375, -268.015625, 947.609375},
	{-548.015625, 483.625, -268.015625, 715.625},
	{-548.015625, 251.640625, -268.015625, 483.640625},
	{-548.015625, 19.65625, -268.015625, 251.65625},
	{-268.015625, 19.65625, 11.984375, 251.65625},
	{11.96875, 19.671875, 291.96875, 251.671875},
	{291.953125, 19.671875, 571.953125, 251.671875},
	{571.9375, 19.671875, 851.9375, 251.671875},
	{851.921875, 19.671875, 1131.921875, 251.671875},
	{851.921875, 251.671875, 1131.921875, 483.671875},
	{851.90625, 483.703125, 1131.90625, 715.703125},
	{851.90625, 715.734375, 1131.90625, 947.734375},
	{851.90625, 947.765625, 1131.90625, 1179.765625},
	{571.90625, 947.765625, 851.90625, 1179.765625},
	{291.875, 947.796875, 571.875, 1179.796875},
	{11.8671875, 947.796875, 291.8671875, 1179.796875},
	{-268.015625, 715.609375, 11.984375, 947.609375},
	{11.84375, 715.796875, 291.84375, 947.796875},
	{291.875, 715.796875, 571.875, 947.796875},
	{571.90625, 715.734375, 851.90625, 947.734375},
	{571.90625, 483.703125, 851.90625, 715.703125},
	{571.9375, 251.671875, 851.9375, 483.671875},
	{291.921875, 251.671875, 571.921875, 483.671875},
	{11.96875, 251.671875, 291.96875, 483.671875},
	{-268.046875, 251.640625, 11.953125, 483.640625},
	{-268.015625, 483.625, 11.984375, 715.625},
	{11.96875, 483.625, 291.96875, 715.625},
	{291.8125, 483.8125, 571.8125, 715.8125},
	{851.875, 1179.8125, 1131.875, 1411.8125},
	{571.875, 1179.8125, 851.875, 1411.8125},
	{291.875, 1179.8125, 571.875, 1411.8125},
	{11.875, 1179.8125, 291.875, 1411.8125},
	{-268.0625, 1179.625, 11.9375, 1411.625},
	{-548.0625, 1179.625, -268.0625, 1411.625},
	{-548.0625, -212.3125, -268.0625, 19.6875},
	{-268.0625, -212.3125, 11.9375, 19.6875},
	{11.9375, -212.3125, 291.9375, 19.6875},
	{291.9375, -212.3125, 571.9375, 19.6875},
	{571.9375, -212.3125, 851.9375, 19.6875},
	{851.9375, -212.3125, 1131.9375, 19.6875},
	{-828.0625, -212.3125, -548.0625, 19.6875},
	{-828.0625, 19.6875, -548.0625, 251.6875},
	{-828.0625, 251.625, -548.0625, 483.625},
	{-828.0625, 483.625, -548.0625, 715.625},
	{-828.0625, 715.625, -548.0625, 947.625},
	{-828.03125, 947.625, -548.03125, 1179.625},
	{-828.03125, 1179.625, -548.03125, 1411.625},
	{-1108.03125, 1179.625, -828.03125, 1411.625},
	{-1108.0625, 947.625, -828.0625, 1179.625},
	{-1108.0625, 715.625, -828.0625, 947.625},
	{-1108.0625, 483.625, -828.0625, 715.625},
	{-1108.0625, 251.6875, -828.0625, 483.6875},
	{-1108.0625, 19.6875, -828.0625, 251.6875},
	{-1108.0625, -212.3125, -828.0625, 19.6875},
	{-1388.0625, -212.3125, -1108.0625, 19.6875},
	{-1668.0625, -212.3125, -1388.0625, 19.6875},
	{-1948.0625, -212.3125, -1668.0625, 19.6875},
	{-1948.0625, 19.6875, -1668.0625, 251.6875},
	{-1668.0625, 19.6875, -1388.0625, 251.6875},
	{-1388.0625, 19.6875, -1108.0625, 251.6875},
	{-1388.0625, 251.625, -1108.0625, 483.625},
	{-1388.0625, 483.625, -1108.0625, 715.625},
	{-1668.0625, 483.625, -1388.0625, 715.625},
	{-1668.0625, 251.6875, -1388.0625, 483.6875},
	{-1948.0625, 251.6875, -1668.0625, 483.6875},
	{-1948.0625, 483.625, -1668.0625, 715.625},
	{-1948.0625, 715.625, -1668.0625, 947.625},
	{-1668.0625, 715.625, -1388.0625, 947.625},
	{-1388.0625, 715.625, -1108.0625, 947.625},
	{-1388.03125, 947.625, -1108.03125, 1179.625},
	{-1668.0625, 947.625, -1388.0625, 1179.625},
	{-1948.0625, 947.625, -1668.0625, 1179.625},
	{-1948.0625, 1179.625, -1668.0625, 1411.625},
	{-1668.03125, 1179.625, -1388.03125, 1411.625},
	{-1388.03125, 1179.625, -1108.03125, 1411.625},
	{-268.015625, 947.609375, 11.984375, 1179.609375},
	{571.859375, 1411.828125, 851.859375, 1643.828125},
	{11.84375, 1411.828125, 291.84375, 1643.828125},
	{-268.140625, 1411.828125, 11.859375, 1643.828125},
	{-548.078125, 1411.640625, -268.078125, 1643.640625},
	{-828.0625, 1411.640625, -548.0625, 1643.640625},
	{-1108.046875, 1411.640625, -828.046875, 1643.640625},
	{-1388.03125, 1411.640625, -1108.03125, 1643.640625},
	{-1668.078125, 1411.640625, -1388.078125, 1643.640625},
	{-1948.078125, 1411.640625, -1668.078125, 1643.640625},
	{291.875, 1411.828125, 571.875, 1643.828125},
	{851.859375, 1411.828125, 1131.859375, 1643.828125},
	{-1948.09375, 1643.671875, -1668.09375, 1875.671875},
	{-1948.125, 1875.703125, -1668.125, 2107.703125},
	{-1948.125, 2107.734375, -1668.125, 2339.734375},
	{-2228.125, 2107.734375, -1948.125, 2339.734375},
	{-2508.15625, 2107.765625, -2228.15625, 2339.765625},
	{-2788.1875, 2107.765625, -2508.1875, 2339.765625},
	{-2788.1875, 1875.765625, -2508.1875, 2107.765625},
	{-2788.21875, 1643.78125, -2508.21875, 1875.78125},
	{-2788.21875, 1411.796875, -2508.21875, 1643.796875},
	{-2788.21875, 1179.8125, -2508.21875, 1411.8125},
	{-2508.21875, 1179.8125, -2228.21875, 1411.8125},
	{-2228.078125, 1179.65625, -1948.078125, 1411.65625},
	{-2228.078125, 1411.640625, -1948.078125, 1643.640625},
	{-2228.078125, 1643.671875, -1948.078125, 1875.671875},
	{-2228.125, 1875.703125, -1948.125, 2107.703125},
	{-2508.15625, 1875.765625, -2228.15625, 2107.765625},
	{-2508.21875, 1643.78125, -2228.21875, 1875.78125},
	{-2508.21875, 1411.796875, -2228.21875, 1643.796875},
	{-1668.125, 2107.734375, -1388.125, 2339.734375},
	{-1388.140625, 2107.765625, -1108.140625, 2339.765625},
	{-1108.15625, 2107.765625, -828.15625, 2339.765625},
	{-828.171875, 2107.765625, -548.171875, 2339.765625},
	{-548.1875, 2107.765625, -268.1875, 2339.765625},
	{-268.203125, 2107.765625, 11.796875, 2339.765625},
	{11.78125, 2107.765625, 291.78125, 2339.765625},
	{291.765625, 2107.765625, 571.765625, 2339.765625},
	{571.75, 2107.765625, 851.75, 2339.765625},
	{851.734375, 2107.765625, 1131.734375, 2339.765625},
	{851.734375, 1875.765625, 1131.734375, 2107.765625},
	{851.828125, 1643.78125, 1131.828125, 1875.78125},
	{571.828125, 1643.859375, 851.828125, 1875.859375},
	{571.75, 1875.890625, 851.75, 2107.890625},
	{291.765625, 1875.765625, 571.765625, 2107.765625},
	{291.828125, 1643.78125, 571.828125, 1875.78125},
	{11.75, 1643.859375, 291.75, 1875.859375},
	{-268.28125, 1643.859375, 11.71875, 1875.859375},
	{-548.171875, 1643.859375, -268.171875, 1875.859375},
	{-828.203125, 1643.671875, -548.203125, 1875.671875},
	{-1108.234375, 1643.671875, -828.234375, 1875.671875},
	{-1388.265625, 1643.671875, -1108.265625, 1875.671875},
	{-1668.0625, 1643.671875, -1388.0625, 1875.671875},
	{-1668.125, 1875.703125, -1388.125, 2107.703125},
	{-1388.140625, 1875.765625, -1108.140625, 2107.765625},
	{-1108.15625, 1875.765625, -828.15625, 2107.765625},
	{-828.171875, 1875.765625, -548.171875, 2107.765625},
	{-548.1875, 1875.765625, -268.1875, 2107.765625},
	{-268.203125, 1875.765625, 11.796875, 2107.765625},
	{11.78125, 1875.765625, 291.78125, 2107.765625},
	{291.765625, 2339.765625, 571.765625, 2571.765625},
	{11.78125, 2339.765625, 291.78125, 2571.765625},
	{-268.203125, 2339.765625, 11.796875, 2571.765625},
	{-548.1873779296875, 2339.7708282470703, -268.1873779296875, 2571.7708282470703},
	{-828.1873779296875, 2339.7708282470703, -548.1873779296875, 2571.7708282470703},
	{-1108.145751953125, 2339.7708282470703, -828.145751953125, 2571.7708282470703},
	{-1388.125, 2339.75, -1108.125, 2571.75},
	{-1668.125, 2339.75, -1388.125, 2571.75},
	{-1948.125, 2339.749954223633, -1668.125, 2571.749954223633},
	{-2228.125, 2339.749954223633, -1948.125, 2571.749954223633},
	{-2508.125, 2339.75, -2228.125, 2571.75},
	{-2788.1666259765625, 2339.7707901000977, -2508.1666259765625, 2571.7707901000977},
	{-2788.125, 2571.7499771118164, -2508.125, 2803.7499771118164},
	{-2508.125, 2571.7499771118164, -2228.125, 2803.7499771118164},
	{-2228.125, 2571.7499771118164, -1948.125, 2803.7499771118164},
	{-1948.125, 2571.7499771118164, -1668.125, 2803.7499771118164},
	{-1668.125, 2571.7499771118164, -1388.125, 2803.7499771118164},
	{-1388.125, 2571.77734375, -1108.125, 2803.77734375},
	{-1108.125, 2571.7890625, -828.125, 2803.7890625},
	{-828.203125, 2571.77734375, -548.203125, 2803.77734375},
	{-548.2124633789062, 2571.775001525879, -268.21246337890625, 2803.775001525879},
	{-268.2291259765625, 2571.7708129882812, 11.7708740234375, 2803.7708129882812},
	{11.7708740234375, 2571.7708129882812, 291.7708740234375, 2803.7708129882812},
	{291.7501220703125, 2571.770824432373, 571.7501220703125, 2803.770824432373},
	{571.7501220703125, 2571.770824432373, 851.7501220703125, 2803.770824432373},
	{571.7501220703125, 2339.770793914795, 851.7501220703125, 2571.770793914795},
	{851.75, 2339.7708129882812, 1131.75, 2571.7708129882812},
	{851.75, 2571.7708282470703, 1131.75, 2803.7708282470703}
};
function CriarGZS(){
	for(new i; i < sizeof gzcoord; i++){
		GzDom[i][gz] = GangZoneCreate(gzcoord[i][GzX], gzcoord[i][GzY], gzcoord[i][GzXX], gzcoord[i][GzYY]);
		CheckExistenciaGZDB(i); 
	}
	LoadGz();
}
function SalvarGz(i){
	new DBResult:R = DB_ExecuteQuery(Data, "UPDATE `Gangzones` SET `Dono`= '%d' WHERE `Gzid` = '%d'",GzDom[i][donogz], i);
	DB_FreeResultSet(R);
}
function ShowPGz(playerid){
	for(new i; i < sizeof gzcoord; i++){
		UseGangZoneCheck(GzDom[i][gz], true);
		GangZoneShowForPlayer(playerid, GzDom[i][gz], CorGangZone(GzDom[i][donogz]));
	}
}

stock CheckExistenciaGZDB(gzD){
	new DBResult: r = DB_ExecuteQuery(Data, "SELECT `Dono` FROM `Gangzones` WHERE `Gzid` = '%d';", gzD);
	if(!DB_GetRowCount(r))
		DB_ExecuteQuery(Data, "INSERT INTO `Gangzones` (Gzid) VALUES ('%d');", gzD);
	
	DB_FreeResultSet(r);
	return 1;
}
function LoadGz(){
	new DBResult:R = DB_ExecuteQuery(Data, "SELECT * FROM `Gangzones`;");
	for(new i; i < DB_GetRowCount(R); i++){
		GzDom[i][donogz]= DB_GetFieldIntByName(R, "Dono");
		GangZoneShowForAll(GzDom[i][gz], CorGangZone(GzDom[i][donogz]));
		DB_SelectNextRow(R);
	}
	DB_FreeResultSet(R);
	return 1;
}
hook OnPlayerEnterGangZone(playerid, zoneid){
	GangZoneAtual[playerid] = zoneid;
	return 1;
}
hook OnPlayerLeaveGangZone(playerid, zoneid){
	GangZoneAtual[playerid] = INVALID_GANG_ZONE;
	
	if(dominador[playerid] == zoneid){
		dominador[playerid] = -1;
		GangZoneStopFlashForAll(zoneid);
		AdicionarPontos(GzDom[zoneid][donogz], -1);
		SendClientMessage(playerid, cor, "Voce nao conseguiu dominar o territorio.");
	}
	return 1;
}
function dominargz(const nick[], timee, playerid, i){
	if(GetIDByName(nick) != -1 && dominador[GetIDByName(nick)] == i){
		if(GzDom[i][donogz] != 0) AdicionarPontos(GzDom[i][donogz], -1);
		AdicionarPontos(timee, 1);
		GzDom[i][donogz] = timee;
		SalvarGz(i);
		GangZoneStopFlashForAll(GzDom[i][gz]);
		GangZoneShowForAll(GzDom[i][gz], CorGangZone(timee));
		SendClientMessageToAll(CorGangZone(timee), "%s tomou um territorio.", nick);
		new id = GetIDByName(nick);

		if(id != -1){
			dominador[id] = -1;
			SendClientMessage(id, cor, "Voce ganhou 1000$ por dominar um territorio.");
			PlayerInfo[id][Dinheiro] += 1000;
		}
	}
	else{
		SendClientMessageToAll(CorGangZone(timee), "%s nao conseguiu dominar um territorio.", nick);
		GangZoneStopFlashForAll(GzDom[i][gz]);
		dominador[playerid] = -1;
	}
}

function CorGangZone(i){
	switch(i){
		case EXERCITO_DE_ISRAEL: return cor_israel;
		case HAMAS: return cor_vermelho;
		default: return 0xffffff55;
	}
}
